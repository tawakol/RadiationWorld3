<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir=".." default="build" name="Minecraft">
	<!--
	 * This build file should be placed in the 'src' folder
	 * In order to use this build file, you must have run 'gradle setupDecompWorkspace'
	 * You must create a folder called 'lib' in the forge directory and put JUnit.jar and hamcrest-core-1.3.jar in it
	   These can be downloaded from https://github.com/junit-team/junit/wiki/Download-and-Install
	 * You must also download the minecraft libs from http://web.cs.dal.ca/~yule/teaching/cscsi3130/lin.zip
	 * Tests must be in src/test/java
	-->
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="src.main" value="src/main/java"/>
    <property name="src.test" value="src/test/java"/>
    <property name="src.resources" value="src/main/resources"/>
	<property name="build.test" value="build/classes/test"/>
	<property name="build.main" value="build/classes/main"/>
	<property name="build.resources" value="build/resources"/>
    <property name="junit.output.dir" value="build/test-results"/>
	<property name="report.test" value="build/reports/test"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="JUnit.classpath">
        <pathelement location="lib/junit.jar"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
    </path>
    <path id="Minecraft.classpath">
        <pathelement location="lib/forgeSrc-1.7.2-10.12.1.1060.jar"/>
        <pathelement location="lib/launchwrapper-1.9.jar"/>
        <pathelement location="lib/asm-debug-all-4.1.jar"/>
        <pathelement location="lib/scala-library-2.10.2.jar"/>
        <pathelement location="lib/scala-compiler-2.10.2.jar"/>
        <pathelement location="lib/jopt-simple-4.5.jar"/>
        <pathelement location="lib/vecmath-1.3.1.jar"/>
        <pathelement location="lib/trove4j-3.0.3.jar"/>
        <pathelement location="lib/icu4j-core-mojang-51.2.jar"/>
        <pathelement location="lib/lzma-0.0.1.jar"/>
        <pathelement location="lib/codecjorbis-20101023.jar"/>
        <pathelement location="lib/codecwav-20101023.jar"/>
        <pathelement location="lib/libraryjavasound-20101123.jar"/>
        <pathelement location="lib/librarylwjglopenal-20100824.jar"/>
        <pathelement location="lib/soundsystem-20120107.jar"/>
        <pathelement location="lib/netty-all-4.0.10.Final.jar"/>
        <pathelement location="lib/guava-15.0.jar"/>
        <pathelement location="lib/commons-lang3-3.1.jar"/>
        <pathelement location="lib/commons-io-2.4.jar"/>
        <pathelement location="lib/jinput-2.0.5.jar"/>
        <pathelement location="lib/jutils-1.0.0.jar"/>
        <pathelement location="lib/gson-2.2.4.jar"/>
        <pathelement location="lib/authlib-1.3.jar"/>
        <pathelement location="lib/log4j-api-2.0-beta9.jar"/>
        <pathelement location="lib/log4j-core-2.0-beta9.jar"/>
        <pathelement location="lib/lwjgl-2.9.0.jar"/>
        <pathelement location="lib/lwjgl_util-2.9.0.jar"/>
        <pathelement location="lib/lwjgl-platform-2.9.0-natives-linux.jar"/>
        <pathelement location="lib/lwjgl-platform-2.9.0-natives-osx.jar"/>
        <pathelement location="lib/lwjgl-platform-2.9.0-natives-windows.jar"/>
        <pathelement location="lib/jinput-platform-2.0.5-natives-linux.jar"/>
        <pathelement location="lib/jinput-platform-2.0.5-natives-osx.jar"/>
        <pathelement location="lib/jinput-platform-2.0.5-natives-windows.jar"/>
        <pathelement location="lib/scala-reflect-2.10.2.jar"/>
    </path>
    <target name="init">
        <mkdir dir="${build.main}"/>
        <mkdir dir="${build.test}"/>
        <mkdir dir="${build.resources}"/>

    	
        <copy includeemptydirs="false" todir="${build.main}">
            <fileset dir="${src.main}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="${build.resources}">
            <fileset dir="${src.resources}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="${build.test}">
            <fileset dir="${src.test}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="build"/>
    </target>
    <target depends="clean" name="cleanall"/>
	
    <target depends="init" name="build">
        <echo message="Building ${ant.project.name}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${build.main}" includeantruntime="false" source="${source}" target="${target}">
            <src path="${src.main}"/>
            <src path="${src.resources}"/>
            <classpath refid="Minecraft.classpath"/>
        </javac>
    </target>
	
	<target depends="build" name="buildTests">
		   <echo message="Testing ${ant.project.name}"/>
	        <javac debug="true" debuglevel="${debuglevel}" destdir="${build.test}" includeantruntime="false" source="${source}" target="${target}">
	            <src path="${src.test}"/>
	        	<classpath>
	                <path refid="Minecraft.classpath"/>
	                <path refid="JUnit.classpath"/>
	        		<pathelement location="${build.main}"/>
	            </classpath>
	        </javac>
	   </target>
	
    <target  depends="buildTests" name="test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
        	    <batchtest todir="${junit.output.dir}">
        	    	<fileset dir="${build.test}"></fileset>
        	    </batchtest>

        	<classpath>
        		<pathelement location="${build.test}"/>
        		<pathelement location="${build.main}"/>
        		<path refid="Minecraft.classpath"/>
        		<path refid="JUnit.classpath"/>
        	</classpath>
        </junit>
    </target>
    <target name="testReport" depends="test">
    	<mkdir dir="${report.test}"/>
        <junitreport todir="${report.test}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${report.test}"/>
        </junitreport>
    </target>
</project>
